@using EPiServer.Core
@using EPiServer.Web.Mvc.Html
@using OxxCommerceStarterKit.Web.Helpers
@using OxxCommerceStarterKit.Web.Models.PageTypes
@using OxxCommerceStarterKit.Web.Models.PageTypes.System
@model Chrome
@{

    bool isInEditMode = Html.IsInEditMode();
    ChromeLanguageInfo selectedLanguage = Model.Languages.FirstOrDefault(l => l.Selected == true);
    if (selectedLanguage == null) // Odd case
    {
        selectedLanguage = new ChromeLanguageInfo() { DisplayName = "Unknown", Selected = true, Url = "/", EditUrl = "/" };
    }

    var contentLoader = EPiServer.ServiceLocation.ServiceLocator.Current.GetInstance<EPiServer.IContentLoader>();
    var homePage = contentLoader.Get<HomePage>(new ContentReference(ContentReference.StartPage.ID));

    var currentUrl = HttpContext.Current.Request.Url.AbsolutePath;

    var loginPage = Model.LoginPage != null ? contentLoader.Get<LoginPage>(Model.LoginPage) : null;
    var accountPage = Model.AccountPage != null ? contentLoader.Get<PageData>(Model.AccountPage) : null;
    var wishlistPage = homePage.Settings.WishListPage != null ? contentLoader.Get<PageData>(homePage.Settings.WishListPage) : null;
}
<!--Search Form-->
@if (Model.SearchPage != null)
{
    <form class="search-form closed" action="@Url.ContentUrl(Model.SearchPage)">
        <div class="container">
            <div class="close-search">
                <i class="icon-delete"></i>
            </div>
            <div class="form-group" ng-controller="AutoCompleteController">
                <label class="sr-only" for="SearchText">@Html.Translate("/common/layout/search_label")</label>
                <span data-valmsg-replace="true" data-valmsg-for="SearchText" class="field-validation-valid"></span>
                <input id="SearchText" type="text" class="form-control" placeholder="@Html.Translate("/common/layout/search_placeholder")" name="q" data-val-required="@string.Format(Html.Translate("/common/validation/required"), Html.Translate("/common/layout/search_label"))" required="required" data-val="true" ng-init="init('@Model.Language')" auto-complete />
                <button type="submit"><i class="icon-magnifier"></i></button>
            </div>
        </div>
    </form>
}

<!--Split Background-->
<div class="left-bg"></div>
<div class="right-bg"></div>

<div class="container">
    <a class="logo" href="@Model.HomePageUrl"><img src="@Model.LogoImageUrl?preset=imagenarrow" class="img-responsive" alt="Logo"></a>
    <!--Language / Currency Switchers-->
    <ul class="switchers">
        <li>
            <a href="#">@selectedLanguage.DisplayName <span class="caret"></span></a>
            <ul class="dropdown">
                @foreach (var langInfo in Model.Languages)
                {
                    if (langInfo.Selected == false)
                    {
                        if (isInEditMode == false)
                        {
                            <li><a href="/@langInfo.Url">@langInfo.DisplayName</a></li>
                        }
                        else
                        {
                            <li><a href="@langInfo.EditUrl" target="_top">@langInfo.DisplayName</a></li>
                        }
                    }
                }

            </ul>
        </li>
    </ul>

    <!--Mobile Menu Toggle-->
    <div class="menu-toggle"><i class="fa fa-list"></i></div>
    <div class="mobile-border"><span></span></div>

    <!--Main Menu-->
    <nav class="menu">
        <ul class="main">
            @if (Model.TopLeftMenu != null)
            {
                @Html.Partial("_TopMenu", Model.TopLeftMenu)
            }
        </ul>
        @Html.Partial("_MainMenu")
    </nav>
    <!--Toolbar-->
    <div class="toolbar group" ng-controller="HeaderCartController">
        <button class="search-btn btn-outlined-invert"><i class="icon-magnifier"></i></button>
        <div class="middle-btns">
            @{
                if (wishlistPage != null)
                {
                    <a class="btn-outlined-invert" href="@Url.ContentUrl(wishlistPage.ContentLink)"><i class="icon-heart"></i> <span>@wishlistPage.Name</span></a>
                }
                if (loginPage != null && accountPage != null)
                {
                    if (User.Identity.IsAuthenticated)
                    {
                        <a class="login-btn btn-outlined-invert" href="@Url.ContentUrl(accountPage.ContentLink)"><i class="icon-profile"></i> <span>@accountPage.Name</span></a>
                    }
                    else
                    {
                        <a class="login-btn btn-outlined-invert" href="@Url.ContentUrl(loginPage.ContentLink)?ReturnUrl=@(HttpUtility.UrlEncode(currentUrl))"><i class="icon-profile"></i> <span>@loginPage.Name</span></a>
                    }
                }
            }
        </div>

        <div class="cart-btn" ng-mouseenter="GetCartItemsToHeader('@Model.Language')">
            <a class="btn btn-outlined-invert" href="@Url.ContentUrl(homePage.Settings.CartPage)"><i class="icon-shopping-cart-content"></i><span></span></a>
            <!--Cart Dropdown-->
            <div class="cart-dropdown">
                <span></span><!--Small rectangle to overlap Cart button-->
                <div class="body">
                    <table>
                        <tr>
                            <th>Items</th>
                            <th>Quantity</th>
                            <th>Price</th>
                        </tr>
                        <tr class="item" ng-repeat="p in products">
                            <td>{{p.Name}}</td>
                            <td>{{p.Quantity}}</td>
                            <td class="price">{{formatMoney(p.LineItemTotal)}}</td>
                        </tr>
                    </table>
                </div>
                <div class="footer group">
                    <div class="buttons">
                        <a class="btn btn-outlined-invert" href="@Url.ContentUrl(Model.CheckoutPage)"><i class="icon-download"></i>Checkout</a>
                        <a class="btn btn-outlined-invert" href="@Url.ContentUrl(homePage.Settings.CartPage)"><i class="icon-shopping-cart-content"></i>To cart</a>
                    </div>
                    <div class="total">{{formatMoney(cartTotalAmount)}}</div>
                </div>
            </div><!--Cart Dropdown Close-->
        </div>
    </div>
</div>
