@using EPiServer.Commerce.Catalog.ContentTypes
@using EPiServer.Core
@using EPiServer.ServiceLocation
@using EPiServer.Web.Routing
@using OxxCommerceStarterKit.Core.Extensions
@using OxxCommerceStarterKit.Web.Helpers
@using OxxCommerceStarterKit.Web.Models.PageTypes

@{
    Layout = null;
    int max = ViewData["Max"] != null ? (int)ViewData["Max"] : 0;

}

@if (Model != null)
{
    <ul class="catalog">
        @Html.MenuList(ContentReference.StartPage, ItemTemplate, max)
    </ul>
}

@helper ItemTemplate(HtmlHelpers.MenuItem firstLevelItem)
{
    bool hasChildren = firstLevelItem.HasChildren.Value;
    <li class="@(firstLevelItem.Selected ? "active" : "") @(hasChildren ? "has-submenu" : "")">
        @if (hasChildren)
        {
            <a href="javascript:;">@firstLevelItem.Page.Name <i class="fa fa-chevron-down"></i></a>
            <ul class="submenu">
                @Html.MenuList(firstLevelItem.Page.ContentLink, SubLevelItemTemplate)
                @MenuFeatureProduct(firstLevelItem.Page)
            </ul>
        }
        else
        {
            @Link(firstLevelItem.Page)
        }
    </li>
}

@helper SubLevelItemTemplate(HtmlHelpers.MenuItem subLevelItem)
{
    bool hasChildren = subLevelItem.HasChildren.Value;
    if (hasChildren)
    {
        <li class="@(subLevelItem.Selected ? "active" : null) has-submenu">
            @Link(subLevelItem.Page)

            <ul class="sub-submenu">
                @Html.MenuList(subLevelItem.Page.ContentLink, SubLevelItemTemplate)
            </ul>

        </li>
    }
    else
    {
        <li> @Link(subLevelItem.Page)</li>
    }
}


@helper Link(PageData page)
{
    @Html.PageLink(page)
}

@helper MenuFeatureProduct(PageData page)
{
    if (page is ShoppingCategoryPage && (((page as ShoppingCategoryPage).FeatureProduct != null) && (page as ShoppingCategoryPage).FeatureProduct.MenuFeatureLink != null))
    {
        var contentLoader = ServiceLocator.Current.GetInstance<EPiServer.IContentLoader>();
        UrlResolver urlResolver = ServiceLocator.Current.GetInstance<UrlResolver>();
        ShoppingCategoryPage shoppingCategoryPage = page as ShoppingCategoryPage;
        EntryContentBase product = contentLoader.Get<EntryContentBase>(shoppingCategoryPage.FeatureProduct.MenuFeatureLink);
        <li class="offer">
            <div class="col-1">
                <p class="p-style2">@shoppingCategoryPage.FeatureProduct.MenuFeatureText</p>
            </div>
            <div class="col-2">
                @SetImageTag(product, urlResolver)
                <a class="btn btn-block" href="#"><span>584$</span>Special offer</a>
            </div>
        </li>
    }
    else
    {
        <li class="offer">
            <div class="col-1">
            </div>
            <div class="col-2">
            </div>
        </li>
    }

}
@helper SetImageTag(EntryContentBase product, UrlResolver urlResolver)
{

    var mediaUrl = product.GetImage(preset: null, groupName: "menufeature");
    if (string.IsNullOrEmpty(mediaUrl))
    {
        // Fall back to default image, force size and aspect ratio
        mediaUrl = product.GetImage(preset: "menufeature");
    }
    
    if (string.IsNullOrEmpty(mediaUrl) == false)
    {
        <img src="@mediaUrl" alt="Special Offer" />
    }
    else
    {
        <div>@product.DisplayName</div>
    }

}

